# -*- coding: utf-8 -*-
"""cournot y competencia perfecto.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1CboFpXizjgL1LBxgQnoBNmCyWd3SSAkR

## Oligopolio de Cournot y Competencia Perfecta

# 1. Oligopolio de Cournot
El oligopolio de Cournot muestra como se comportan los mercados donimados por un pequeño número de empresas, en este caso 2 empresas.

Los supuestos de este modelo son:

1. Dos firmas
2. Los costos son iguales -- Cmg1 = Cmg2
3. La demanda es lineal

Uno de los aspectos más importantes para entender este modelo es que las empresas decidiran cuanto producir, dependiento de la decision tomada por la otra empresa.

# # 2. Competencia Perfecta
En la competencia perfecta, hay muchas firmas que no tienen poder para influir en los precios. Estas empresas producen bienes homogéneos, y el precio se determina únicamente por la oferta y demanda del mercado.

Los supuestos del modelo son:

  1.  Muchas firmas: Ninguna empresa puede influir en el precio. El comportamiento de una empresa individual simula a una pequeña firma que toma el precio del mercado.

  2. Costos iguales: Todas las empresas tienen los mismos costos.

  3. Información perfecta: Todos los participantes del mercado (empresas y consumidores) tienen acceso a toda la información relevante, como precios y costos

En competencia perfecta, cada empresa ajusta su producción para que el costo marginal sea igual al precio de mercado.
"""

class OC_CP:
    def __init__(self, costo_marginal1, costo_marginal2, demanda, costo_adicional_fijo, costo_adicional_variable, interseccion_CP, coeficiente_de_pendiente, costo_fijo):
        self.costo_marginal1 = costo_marginal1
        self.costo_marginal2 = costo_marginal2
        self.demanda = demanda
        self.Q1 = 0
        self.Q2 = 0
        self.costo_adicional_fijo = costo_adicional_fijo
        self.costo_adicional_variable = costo_adicional_variable
        self.interseccion_CP = interseccion_CP
        self.coeficiente_de_pendiente = coeficiente_de_pendiente
        self.costo_fijo = costo_fijo
        self.produccion = 0


    # Funciones del Oligopolio de Cournot

    def Equilibrio(self):
        self.Q1 = ((self.demanda - costo_marginal1)/3)
        self.Q2 = ((self.demanda - costo_marginal2)/3)
        return (self.Q1, self.Q2)

    def beneficios (self, B_empresa=True):
      if B_empresa:
        Precio = self.demanda - self.Q1 - self.Q2
        return (Precio * self.Q1)-(self.Q1*self.costo_marginal1)
      else:
        Precio= self.demanda - self.Q1 - self.Q2
        return (Precio * self.Q2)-(self.Q2*self.costo_marginal2)

    def Beneficios(self):
        return (self.beneficios(B_empresa=True), self.beneficios(B_empresa=False))

    def Precios(self):
        Precio = self.demanda - self.Q1 - self.Q2
        return Precio

    # Funciones del mercado en competencia perfecta

    def PreciosCP(self):
        preciocp = self.costo_adicional_variable * self.produccion + self.costo_adicional_fijo
        return preciocp

    def EquilibrioCP(self):
        self.produccion = ((self.interseccion_CP - self.costo_adicional_fijo * self.costo_adicional_variable) / (self.costo_adicional_variable * self.coeficiente_de_pendiente + 1))
        return self.produccion

    def CostoTotal(self):
        costo_total = self.produccion**self.costo_adicional_variable + self.costo_adicional_fijo * self.produccion + self.costo_fijo
        return costo_total

    def BeneficiosCP(self):
        beneficioCP = self.PreciosCP() * self.produccion - (self.CostoTotal())
        return beneficioCP

# Atributos Oligopolio Cournot

demanda = 30
costo_marginal1 = 15
costo_marginal2 = 15

# Atributos Competencia Perfecta

costo_adicional_fijo = 20
costo_adicional_variable = 2
interseccion_CP = 100
coeficiente_de_pendiente = 2
costo_fijo = 10

# Ejecución modelo oligopolio cournot

mercado =OC_CP(costo_marginal1, costo_marginal2, demanda, costo_adicional_fijo, costo_adicional_variable, interseccion_CP, coeficiente_de_pendiente, costo_fijo)


equilibrio = mercado.Equilibrio()
beneficios = mercado.Beneficios()
Precio_equilibrio = mercado.Precios()
print(f"Las cantidades de equilibrio en Oligopolio es: {equilibrio}")
print(f"Los beneficios en oligopolio son: {beneficios}")
print(f"El precio de equilibrio en oligopolio es: {Precio_equilibrio}")

## Ejecucion modelo de competencia perfecta

# SIMULACIÓN TAMAÑO DE MERCADO
TAMAÑO_MERCADO = 1  # Cambia este valor para probar el efecto del tamaño de mercado en los resultados


if TAMAÑO_MERCADO > 0.99:
    costo_adicional_fijo *= TAMAÑO_MERCADO
    costo_adicional_variable *= TAMAÑO_MERCADO
    interseccion_CP *= TAMAÑO_MERCADO
    coeficiente_de_pendiente *= TAMAÑO_MERCADO
    costo_fijo *= TAMAÑO_MERCADO

    # simulacion de mercado
    mercadoCP = OC_CP(costo_marginal1=costo_marginal1, costo_marginal2=costo_marginal2, demanda=demanda,
                      costo_adicional_fijo=costo_adicional_fijo,
                      costo_adicional_variable=costo_adicional_variable,
                      interseccion_CP=interseccion_CP,
                      coeficiente_de_pendiente=coeficiente_de_pendiente,
                      costo_fijo=costo_fijo)


    equilibrioCP = mercadoCP.EquilibrioCP()
    preciosCP = mercadoCP.PreciosCP()
    beneficioCP = mercadoCP.BeneficiosCP()

    # Imprimir los resultados
    print(f"Equilibrio en Competencia Perfecta es: {equilibrioCP}")
    print(f"Precios en Competencia Perfecta: {preciosCP}")
    print(f"Beneficio en Competencia Perfecta: {beneficioCP}")

else:
    print("El tamaño de mercado debe ser mayor a 1 para ver los efectos en los resultados.")

"""# AUTORES:

###Paula Andrea Guzman Cañas - Carlos Eduardo Galvis Salamanca

###Estudiantes Universidad Externado de Colombia

###Guiado por: Andrés Daniel Godoy Ortiz

###Docente Universidad Externado de Colombia y Universidad de la Sabana
"""

